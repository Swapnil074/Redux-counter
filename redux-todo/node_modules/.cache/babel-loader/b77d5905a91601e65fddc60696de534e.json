{"ast":null,"code":"var _jsxFileName = \"/Users/swapnilsinha/Desktop/Redux-counter/redux-todo/src/features/header/Header.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nconst Header = () => {\n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n  const handleChange = e => setText(e.target.value);\n  const handleKeyDown = e => {\n    const trimmedText = e.target.value.trim();\n    // If the user pressed the Enter key:\n    if (e.key === 'Enter' && trimmedText) {\n      // Dispatch the \"todo added\" action with this text\n      dispatch({\n        type: 'todos/todoAdded',\n        payload: trimmedText\n      });\n      // And clear out the text input\n      setText('');\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: \"header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"new-todo\",\n    placeholder: \"What needs to be done?\",\n    value: text,\n    onChange: handleChange,\n    onKeyDown: handleKeyDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Header;","map":{"version":3,"names":["React","useState","useDispatch","Header","text","setText","dispatch","handleChange","e","target","value","handleKeyDown","trimmedText","trim","key","type","payload"],"sources":["/Users/swapnilsinha/Desktop/Redux-counter/redux-todo/src/features/header/Header.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nconst Header = () => {\n  const [text, setText] = useState('')\n  const dispatch=useDispatch();\n\n  const handleChange = (e) => setText(e.target.value)\n  const handleKeyDown = e => {\n    const trimmedText = e.target.value.trim()\n    // If the user pressed the Enter key:\n    if (e.key === 'Enter' && trimmedText) {\n      // Dispatch the \"todo added\" action with this text\n      dispatch({ type: 'todos/todoAdded', payload: trimmedText })\n      // And clear out the text input\n      setText('')\n    }\n  }\n\n\n  return (\n    <header className=\"header\">\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={text}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n\n      />\n    </header>\n  )\n}\n\nexport default Header\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AAEzC,MAAMC,MAAM,GAAG,MAAM;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMK,QAAQ,GAACJ,WAAW,EAAE;EAE5B,MAAMK,YAAY,GAAIC,CAAC,IAAKH,OAAO,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACnD,MAAMC,aAAa,GAAGH,CAAC,IAAI;IACzB,MAAMI,WAAW,GAAGJ,CAAC,CAACC,MAAM,CAACC,KAAK,CAACG,IAAI,EAAE;IACzC;IACA,IAAIL,CAAC,CAACM,GAAG,KAAK,OAAO,IAAIF,WAAW,EAAE;MACpC;MACAN,QAAQ,CAAC;QAAES,IAAI,EAAE,iBAAiB;QAAEC,OAAO,EAAEJ;MAAY,CAAC,CAAC;MAC3D;MACAP,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;EAGD,oBACE;IAAQ,SAAS,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACxB;IACE,SAAS,EAAC,UAAU;IACpB,WAAW,EAAC,wBAAwB;IACpC,KAAK,EAAED,IAAK;IACZ,QAAQ,EAAEG,YAAa;IACvB,SAAS,EAAEI,aAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAEzB,CACK;AAEb,CAAC;AAED,eAAeR,MAAM"},"metadata":{},"sourceType":"module"}