{"ast":null,"code":"const initialState = {\n  todos: [{\n    id: 0,\n    text: 'First Post!',\n    completed: false,\n    priority: 'red'\n  }, {\n    id: 1,\n    text: 'Second Post',\n    completed: true,\n    priority: 'green'\n  }, {\n    id: 2,\n    text: 'Third Post',\n    completed: false,\n    priority: 'yellow'\n  }]\n};\nfunction nextTodoId(todos) {\n  const maxId = todos.reduce((maxId, todo) => Math.max(todo.id, maxId), -1);\n  return maxId + 1;\n}\nexport default function todoReducers() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'todos/todoAdded':\n      return [...state, {\n        id: nextTodoId(state),\n        text: action.payload,\n        completed: false,\n        priority: 'red'\n      }];\n    case 'todos/todoToggled':\n      return state.map(todo => {\n        if (todo.id !== action.payload) {\n          return todo;\n        }\n        return {\n          ...todo,\n          completed: !todo.completed\n        };\n      });\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["initialState","todos","id","text","completed","priority","nextTodoId","maxId","reduce","todo","Math","max","todoReducers","state","action","type","payload","map"],"sources":["/Users/swapnilsinha/Desktop/Redux-counter/redux-todo/src/features/todos/todosSlice.js"],"sourcesContent":["const initialState ={\n    todos:[{\n    id: 0,\n    text: 'First Post!',\n    completed: false,\n    priority:'red'\n},\n{\n    id: 1,\n    text: 'Second Post',\n    completed: true,\n    priority:'green'\n},\n{\n    id: 2,\n    text: 'Third Post',\n    completed: false,\n    priority:'yellow'\n}\n]\n}\n\nfunction nextTodoId(todos) {\n    const maxId = todos.reduce((maxId, todo) => Math.max(todo.id, maxId), -1)\n    return maxId + 1\n  }\n\nexport default function todoReducers(state=initialState,action){\n    switch(action.type){\n\n        case 'todos/todoAdded':\n            return [\n                ...state,\n                {\n                    id:nextTodoId(state),\n                    text:action.payload,\n                    completed:false,\n                    priority:'red'\n                }\n            ]\n        case 'todos/todoToggled':\n            return state.map(todo=>{\n                if(todo.id!==action.payload){\n                    return todo;\n                }\n                return {\n                    ...todo,\n                    completed:!todo.completed\n                }\n            })\n        default:\n            return state;\n    }\n}"],"mappings":"AAAA,MAAMA,YAAY,GAAE;EAChBC,KAAK,EAAC,CAAC;IACPC,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,aAAa;IACnBC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAC;EACb,CAAC,EACD;IACIH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,aAAa;IACnBC,SAAS,EAAE,IAAI;IACfC,QAAQ,EAAC;EACb,CAAC,EACD;IACIH,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,YAAY;IAClBC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAC;EACb,CAAC;AAED,CAAC;AAED,SAASC,UAAU,CAACL,KAAK,EAAE;EACvB,MAAMM,KAAK,GAAGN,KAAK,CAACO,MAAM,CAAC,CAACD,KAAK,EAAEE,IAAI,KAAKC,IAAI,CAACC,GAAG,CAACF,IAAI,CAACP,EAAE,EAAEK,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;EACzE,OAAOA,KAAK,GAAG,CAAC;AAClB;AAEF,eAAe,SAASK,YAAY,GAA2B;EAAA,IAA1BC,KAAK,uEAACb,YAAY;EAAA,IAACc,MAAM;EAC1D,QAAOA,MAAM,CAACC,IAAI;IAEd,KAAK,iBAAiB;MAClB,OAAO,CACH,GAAGF,KAAK,EACR;QACIX,EAAE,EAACI,UAAU,CAACO,KAAK,CAAC;QACpBV,IAAI,EAACW,MAAM,CAACE,OAAO;QACnBZ,SAAS,EAAC,KAAK;QACfC,QAAQ,EAAC;MACb,CAAC,CACJ;IACL,KAAK,mBAAmB;MACpB,OAAOQ,KAAK,CAACI,GAAG,CAACR,IAAI,IAAE;QACnB,IAAGA,IAAI,CAACP,EAAE,KAAGY,MAAM,CAACE,OAAO,EAAC;UACxB,OAAOP,IAAI;QACf;QACA,OAAO;UACH,GAAGA,IAAI;UACPL,SAAS,EAAC,CAACK,IAAI,CAACL;QACpB,CAAC;MACL,CAAC,CAAC;IACN;MACI,OAAOS,KAAK;EAAC;AAEzB"},"metadata":{},"sourceType":"module"}